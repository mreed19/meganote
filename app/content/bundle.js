"use strict";function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var configFunction=function(n){n.otherwise("/notes/")},run=function(n,e){n.$on("$stateChangeSucess",function(){n.$state=e}),n.$on("$stateChangError",function(){e.go("sign-in")})};angular.module("meganote",["ui.router","ngFlash","textAngular","angularSpinner","ngLoadingSpinner","ngResource","meganote.notes","meganote.notesForm","meganote.signUp","meganote.users","meganote.signIn"]).config(configFunction),configFunction.$inject=["$urlRouterProvider"],run.$inject=["$rootScope","$state"],angular.module("meganote.notesForm",[]),angular.module("meganote.notes",[]),angular.module("meganote.signIn",[]),angular.module("meganote.signUp",[]),angular.module("meganote.users",[]),angular.module("meganote").constant("API_BASE","http://localhost:3030/api/v1/");var AuthInterceptor=function(n,e){return{request:function(t){var r=n.get();return r&&t.url.includes(e)&&(t.headers.Authorization=r),t}}},authConfig=function(n){return n.interceptors.push("AuthInterceptor")};angular.module("meganote").factory("AuthInterceptor",AuthInterceptor).config(authConfig),AuthInterceptor.$inject=["AuthToken","API_BASE"],authConfig.$inject=["$httpProvider"],function(){angular.module("ngLoadingSpinner",["angularSpinner"]).directive("usSpinner",["$http","$rootScope",function(n,e){return{link:function(t,r){e.spinnerActive=!1,t.isLoading=function(){return n.pendingRequests.length>0},t.$watch(t.isLoading,function(n){e.spinnerActive=n,n?r.removeClass("ng-hide"):r.addClass("ng-hide")})}}}])}.call(void 0),!function(){var n=function(n){n.state("notes",{url:"/notes",templateUrl:"notes/notes.html",controller:"NotesController",controllerAs:"vm",resolve:{authenticated:e},data:{title:"Notes"}}).state("notes.form",{url:"/:noteId",templateUrl:"notes/notes-form/notes-form.html",controller:"NotesFormController",controllerAs:"vm"})},e=function(n){return new Promise(function(e,t){n.signedIn()?e():t()})};angular.module("meganote.notes").config(n),n.$inject=["$stateProvider"],e.$inject=["CurrentUser"]}();var Note=function(n,e){return n(e+"notes/:id")};angular.module("meganote.notes").factory("Note",Note),Note.$inject=["$resource","API_BASE"];var NotesFormController=function(n,e,t){function r(){return n.params.noteId?t.get({id:n.params.noteId}):new t}function o(){u.note={title:"",body_html:""},u.editing=!1}function a(){}function s(){}var u=this;u.note=r(),u.clearForm=o,u.save=a,u.destroy=s};angular.module("meganote.notesForm").controller("NotesFormController",NotesFormController),NotesFormController.$inject=["$state","Flash","Note"];var NotesController=function(n){var e=this;e.notes=n.query()};angular.module("meganote.notes").controller("NotesController",NotesController),NotesController.$inject=["Note"];var NotesService=function(n,e){function t(){var e=n.get(i);return e.then(function(n){return l.notes=n.data}),e}function r(e){var t=n.post(i,e);return t.then(function(n){return l.notes.unshift(n.data)}),t}function o(e){var t=n.put(""+i+e._id,e);return t.then(function(n){l.removeById(n.data._id),l.notes.unshift(n.data)}),t}function a(e){var t=n["delete"](""+i+e._id);return t.then(function(n){return l.removeById(n.data._id)}),t}function s(n){for(var e=0;e<l.notes.length;e++)l.notes[e]._id===n&&l.notes.splice(e,1)}function u(n){for(var e=0;e<l.notes.length;e++)if(l.notes[e]._id===n)return angular.copy(l.notes[e])}var i=e+"notes/",l={notes:[],getNotes:t,create:r,update:o,destroy:a,removeById:s,find:u};return l};angular.module("meganote.notes").factory("NotesService",NotesService),NotesService.$inject=["$http","API_BASE"];var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.signIn").directive("signIn",["$state","Flash","UsersService",function(n,e,t){var r=function(){function r(){_classCallCheck(this,r)}return _createClass(r,[{key:"submit",value:function(){var r=this;t.login(r.user).then(function(){return n.go("notes.form",{noteId:void 0})},function(n){return e.create("danger",n.data.message)})}}]),r}();return{scope:{},controller:r,controllerAs:"vm",bindToController:!0,template:'\n\n          <div class="container">\n            <div class="row">\n              <div class="col-xs-6 col-xs-offset-4">\n                <h3>Welcome back!</h3>\n                <form id="new_user" ng-submit="vm.submit()" novalidate>\n                  <p>\n                    <label for="username">Username</label><br>\n                    <input\n                      ng-model="vm.user.username"\n                      type="text"\n                      name="username"\n                      required>\n                  </p>\n                  <p>\n                    <label for="password">Password</label><br>\n                    <input\n                      ng-model="vm.user.password"\n                      type="password"\n                      name="password"\n                      required>\n                  </p>\n                  <input type="submit" name="commit" value="Sign In" class="btn btn-default">\n                  <span class="login">\n                    Don\'t have an account?\n                    <a ui-sref="sign-up">Sign up!</a>\n                  </span>\n                </form>\n                <flash-message\n                  duration="5000"\n                  show-close="false"\n                  ></flash-message>\n                <span us-spinner="{top:100}"></span>\n              </div>\n            </div>\n          </div>\n\n          '}}]);var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.signUp").directive("signUp",["$state","Flash","UsersService",function(n,e,t){var r=function(){function r(){_classCallCheck(this,r),this.user={}}return _createClass(r,[{key:"submit",value:function(){t.create(this.user).then(function(){return n.go("notes.form",{noteId:void 0})},function(n){if(n.data.errors){var t="Oops! Something went wrong.<ul>",r=!0,o=!1,a=void 0;try{for(var s,u=Object.keys(n.data.errors)[Symbol.iterator]();!(r=(s=u.next()).done);r=!0){var i=s.value;t+="<li>"+n.data.errors[i].message+"</li>"}}catch(l){o=!0,a=l}finally{try{!r&&u["return"]&&u["return"]()}finally{if(o)throw a}}t+="</ul>",e.create("danger",t)}})}}]),r}();return{scope:{},controller:r,controllerAs:"vm",bindToController:!0,template:'<div class="container">\n            <div class="row">\n              <div class="col-xs-6 col-xs-offset-4">\n                <h3>Sign Up for Meganote</h3>\n                <form id="new_user" ng-submit="vm.submit()" novalidate>\n                  <p>\n                    <label for="name">Full Name</label><br>\n                    <input\n                      ng-model="vm.user.name"\n                      type="text"\n                      name="name"\n                      autofocus="autofocus"\n                      required>\n                  </p>\n                  <p>\n                    <label for="username">Username</label><br>\n                    <input\n                      ng-model="vm.user.username"\n                      type="text"\n                      name="username"\n                      required>\n                  </p>\n                  <p>\n                    <label for="password">Password</label><br>\n                    <input\n                      ng-model="vm.user.password"\n                      type="password"\n                      name="password"\n                      required>\n                  </p>\n                  <p>\n                    <label for="passwordConfirmation">Re-type Password</label><br>\n                    <input\n                      ng-model="vm.user.passwordConfirmation"\n                      type="password"\n                      name="passwordConfirmation"\n                      required>\n                  </p>\n                  <input type="submit" name="commit" value="Sign Up" class="btn btn-default">\n                  <span class="login">\n                    Already have an account?\n                    <a ui-sref="sign-in">Log in.</a>\n                  </span>\n                </form>\n                <flash-message\n                  duration="5000"\n                  show-close="false"\n                ></flash-message>\n                <span us-spinner="{top:100}"></span>\n              </div>\n            </div>\n          </div>\n'}}]);var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.users").service("AuthToken",["$window",function(n){var e=function(){function e(){_classCallCheck(this,e),this.token=n.localStorage.getItem("authToken")}return _createClass(e,[{key:"set",value:function(e){this.token=e,n.localStorage.setItem("authToken",this.token)}},{key:"get",value:function(){return this.token}},{key:"clear",value:function(){this.token=void 0,n.localStorage.removeItem("authToken")}}]),e}();return new e}]);var configFunction=function(n){n.state("sign-up",{url:"/sign-up",template:"<sign-up></sign-up>",data:{title:"Sign up"}}).state("sign-in",{url:"/sign-in",template:"<sign-in></sign-in>",data:{title:"Sign in"}}).state("user-profile",{url:"/profile",template:"<user-profile></user-profile>",data:{title:"Profile"}})};angular.module("meganote.users").config(configFunction),configFunction.$inject=["$stateProvider"];var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.users").service("CurrentUser",["$window",function(n){var e=function(){function e(){_classCallCheck(this,e),this.user=JSON.parse(n.localStorage.getItem("currentUser"))}return _createClass(e,[{key:"set",value:function(e){this.user=e,n.localStorage.setItem("currentUser",JSON.stringify(this.user))}},{key:"get",value:function(){return this.user||{}}},{key:"clear",value:function(){this.user=void 0,n.localStorage.removeItem("currentUser")}},{key:"signedIn",value:function(){return!!this.get()._id}}]),e}();return new e}]);var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.users").directive("userProfile",["Flash","CurrentUser","UsersService",function(n,e,t){var r=function(){function r(){_classCallCheck(this,r);var n=this;n.user=angular.copy(e.get())}return _createClass(r,[{key:"submit",value:function(){var e=this;t.update(e.user).then(function(){return n.create("success","Successfully updated user.")},function(e){if(e.data.errors){var t="Oops! Something went wrong.<ul>",r=!0,o=!1,a=void 0;try{for(var s,u=Object.keys(e.data.errors)[Symbol.iterator]();!(r=(s=u.next()).done);r=!0){var i=s.value;t+="<li>"+e.data.errors[i].message+"</li>"}}catch(l){o=!0,a=l}finally{try{!r&&u["return"]&&u["return"]()}finally{if(o)throw a}}t+="</ul>",n.create("danger",t)}})}}]),r}();return{scope:{},controller:r,controllerAs:"vm",bindToController:!0,template:'\n\n          <div class="container">\n            <div class="row">\n              <div class="col-xs-6 col-xs-offset-4">\n                <h3>Update Your Profile</h3>\n                <form id="new_user" ng-submit="vm.submit()" novalidate>\n                  <p>\n                    <label for="name">Full Name</label><br>\n                    <input\n                      ng-model="vm.user.name"\n                      type="text"\n                      name="name"\n                      autofocus="autofocus"\n                      required>\n                  </p>\n                  <p>\n                    <label for="username">Username</label><br>\n                    <input\n                      ng-model="vm.user.username"\n                      type="text"\n                      name="username"\n                      required>\n                  </p>\n                  <input type="submit" name="commit" value="Save Changes" class="btn btn-default">\n                  <span class="login">\n                    <a ui-sref="notes.form({ noteId: undefined })">\n                      Back to my notes\n                    </a>\n                </form>\n                <flash-message\n                  duration="5000"\n                  show-close="false"\n                  ></flash-message>\n                <span us-spinner="{top:100}"></span>\n              </div>\n            </div>\n          </div>\n\n\n          '}}]);var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.users").directive("userLinks",["CurrentUser","AuthToken",function(n,e){var t=function(){function t(){_classCallCheck(this,t)}return _createClass(t,[{key:"user",value:function(){return n.get()}},{key:"signedIn",value:function(){return n.signedIn()}},{key:"logout",value:function(){n.clear(),e.clear()}}]),t}();return{scope:{},controller:t,controllerAs:"vm",bindToController:!0,template:'\n\n          <div class="user-links">\n            <span ng-show="vm.signedIn()">\n              <a ui-sref="user-profile">Signed in as {{ vm.user().name }}</a>\n              |\n              <a ui-sref="sign-in" ng-click="vm.logout()">Logout</a>\n            </span>\n            <span ng-show="!vm.signedIn()">\n              <a ui-sref="sign-up">Sign up for Meganote today!</a>\n            </span>\n          </div>\n\n          '}}]);var _createClass=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}();angular.module("meganote.users").service("UsersService",["$http","API_BASE","AuthToken","CurrentUser",function(n,e,t,r){var o=e+"users/",a=function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"create",value:function(e){var a=n.post(o,{user:e});return a.then(function(n){t.set(n.data.authToken),r.set(n.data.user)}),a}},{key:"update",value:function(e){var t=n.put(""+o+e._id,{user:e});return t.then(function(n){return r.set(n.data.user)}),t}},{key:"login",value:function(o){var a=n.post(e+"sessions/",{user:o});return a.then(function(n){t.set(n.data.authToken),r.set(n.data.user)}),a}}]),a}();return new a}]);
//# sourceMappingURL=bundle.js.map
